variables:
  grv: &goreleaser-version "1.21.1"
  gv: &go-version "1.21.3"

version: 2.1

orbs:
  gor: hubci/goreleaser@2.4
  k8s: circleci/kubernetes@1.3

executors:
  linux:
    machine:
      image: ubuntu-2204:2023.07.2

workflows:
  main-wf:
    jobs:
      - test
      - gor/release:
          name: goreleaser-snapshot
          version: *goreleaser-version
          go-version: *go-version
          image: linux
          dry-run: true
          pre-steps:
          - run: echo $GITHUB_TOKEN | docker login ghcr.io -u felicianotech --password-stdin
          post-steps:
            - when:
                condition:
                  equal: [ "<< pipeline.git.branch >>", "trunk" ]
                steps:
                  - run: docker push --all-tags ghcr.io/cloud-unpacked/ippi
            - persist_to_workspace:
                root: "."
                paths:
                  - "dist"
          context:
          - docker-ctx
          - goreleaser-ctx
  release-wf:
    jobs:
      - test:
          filters: &semverFilters
            branches:
              ignore: /.*/
            tags:
              # SemVer regex
              only: /^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/
      - gor/release:
          name: release-with-goreleaser
          version: *goreleaser-version
          go-version: *go-version
          image: linux
          filters: *semverFilters
          pre-steps:
          - run: echo $GITHUB_TOKEN | docker login ghcr.io -u felicianotech --password-stdin
          post-steps:
            - persist_to_workspace:
                root: "."
                paths:
                  - "."
          context: goreleaser-ctx
      - deploy:
          name: "deploy-prod"
          environment: "production"
          requires:
            - release-with-goreleaser
          filters:
            branches:
              ignore: /.*/
            tags:
              # Simplified SemVer regex
              only: /^v\d+\.\d+\.\d+$/
          context:
            - k8s-ctx

jobs:
  test:
    docker:
      - image: cimg/go:1.21
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1
      - run:
          name: "Download Dependancies"
          command: go mod download
      - run:
          name: "Run Tests"
          command: go test ./...
      - save_cache:
          key: go-mod-v1
          paths:
            - "/go/pkg/mod"
  deploy:
    parameters:
      environment:
        description: "The server environment this should deploy to."
        type: enum
        enum:
          - "production"
          - "staging"
    executor: linux
    steps:
      - attach_workspace:
          at: .
      - k8s/install-kubeconfig
      - k8s/install-kubectl:
          kubectl-version: "v1.27.6"
      - run:
          name: "Deploy"
          command: |
            # It's possible we're trying to deploy too fast. Wait 10 seconds
            # before tryingt to deploy new images
            sleep 10

            if [ "<< parameters.environment >>" == "staging" ]; then

              echo "Deploying to staging."
              IMAGE=$(cat ./dist/artifacts.json | jq '.[].name | match("(^ghcr)(.*)(SNAPSHOT)(.*)$")' | jq -r .string)
              kubectl set image --namespace=cloud-unpacked deployment/ippi app=$IMAGE
            fi

            if [ "<< parameters.environment >>" == "production" ]; then

              echo "Deploying to production."
              kubectl set image --namespace=cloud-unpacked deployment/ippi app=<< pipeline.git.tag >>
            fi
